// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace HttpClientDemo.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\user\source\repos\HttpClientDemo\HttpClientDemo\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\user\source\repos\HttpClientDemo\HttpClientDemo\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\user\source\repos\HttpClientDemo\HttpClientDemo\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\user\source\repos\HttpClientDemo\HttpClientDemo\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\user\source\repos\HttpClientDemo\HttpClientDemo\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\user\source\repos\HttpClientDemo\HttpClientDemo\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\user\source\repos\HttpClientDemo\HttpClientDemo\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\user\source\repos\HttpClientDemo\HttpClientDemo\_Imports.razor"
using HttpClientDemo;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\user\source\repos\HttpClientDemo\HttpClientDemo\_Imports.razor"
using HttpClientDemo.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\user\source\repos\HttpClientDemo\HttpClientDemo\_Imports.razor"
using HttpClientDemo.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\user\source\repos\HttpClientDemo\HttpClientDemo\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/weather")]
    public partial class WheatherData : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 43 "C:\Users\user\source\repos\HttpClientDemo\HttpClientDemo\Pages\WheatherData.razor"
       
    WeatherForecastModel forecast;
    string errorString;

    protected override async Task OnInitializedAsync()
    {
        var request = new HttpRequestMessage(HttpMethod.Get,
            "https://www.metaweather.com/api/location/2471217/");

        var client = _clientFactory.CreateClient();  //create a client, use a factory to create client for us so it will either pull from existing client out or it will create a new client depending on some internal rules,
        //there is a pool of clients that the client factory has that it will pull from, the reason this is important instead just create our new HTTP client every time is because
        //you can actually have socket exhaustion from having too many open clients if you don't close them properly
        //plus it caused some overhead in your machine and is just little messier to just call HTTP client directly, well now using the client factory we can create the client properly
        //and properly make sure they're closed and all the rest, so we don't need to worry about how it is disposed, it disposed off itself just fine
        //and it refreshes them on a certain cycle so the DNS doesn't get stale but it also doesn't have too many open at a time, it just take care a lot of stuff behind the scenes

        HttpResponseMessage response = await client.SendAsync(request);  //send the request out and get the response back

        if (response.IsSuccessStatusCode)
        {
            forecast = await response.Content.ReadFromJsonAsync<WeatherForecastModel>();  //this is gonna take our content and it's gonna read from JSON async which means it gonna take this "WeatherForecastModel" model and
              //and it's gonna read the JSON and put it into strongly typed model "forecast"
            errorString = null;
        }
        else
        {
            errorString = $"There was an error getting our forecast: {response.ReasonPhrase}";
        }

        //var client = _clientFactory.CreateClient("meta");

        //try
        //{
        //    forecast = await client.GetFromJsonAsync<WeatherForecastModel>("location/2471217/"); //we've now shortened how much we actually need to put in here to just the extension of our API
        //    errorString = null;
        //}
        //catch (Exception ex)
        //{
        //    errorString = $"There was an error getting our forecast: {ex.Message}";
        //}
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IHttpClientFactory _clientFactory { get; set; }
    }
}
#pragma warning restore 1591
